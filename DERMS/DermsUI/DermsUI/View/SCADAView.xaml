<UserControl x:Class="DermsUI.View.SCADAView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DermsUI.View"
             xmlns:ViewModel="clr-namespace:DermsUI.ViewModel"
             xmlns:converters ="clr-namespace:dCom.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="530" d:DesignWidth="754">

    <UserControl.DataContext>
        <ViewModel:SCADAViewModel></ViewModel:SCADAViewModel>
    </UserControl.DataContext>

    <UserControl.Resources>
        <converters:ConnectionStateToColorConverter x:Key="ConnectionStateToColor" />
        <converters:StringToVisibilityConverter x:Key="StringToVisibility" />
        <converters:AlarmToBackgroundColorConverter x:Key="AlarmToBackgroundColor"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DataGrid ItemsSource="{Binding Points}" SelectionMode="Single" AutoGenerateColumns="False"
				  CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False"
				  SelectionUnit="FullRow" Background="#b6b3af"
				  Name="dgPoints" SelectedItem="{Binding SelectedDataItem}">
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding SelectedPointCommand}" CommandParameter="{Binding Points}"> </MouseBinding>
            </DataGrid.InputBindings>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" >
                    <Setter Property="IsHitTestVisible" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Alarm}" Value="REASONABILITY_FAILURE">
                            <Setter Property="Background" Value="#ff9966"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="NO_ALARM">
                            <Setter Property="Background" Value="#b6b3af"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LOW_ALARM">
                            <Setter Property="Background" Value="#ff3300"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HIGH_ALARM">
                            <Setter Property="Background" Value="#cc0000"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="ABNORMAL_VALUE">
                            <Setter Property="Background" Value="#ff33cc"/>
                        </DataTrigger>
                    </Style.Triggers>
                    </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Type" Binding="{Binding Type}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Address" Binding="{Binding Address, StringFormat={}{0:d5}}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Value" Binding="{Binding DisplayValue}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Raw Value" Binding="{Binding RawValue}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Timestamp" Binding="{Binding Timestamp}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Alarm" Binding="{Binding Alarm}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Gid" Binding="{Binding Gid}" IsReadOnly="True" Width="*" />
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="2" Grid.ColumnSpan="2">
            <StatusBarItem>
                    <Border Background="{Binding ConnectionState, Converter={StaticResource ResourceKey=ConnectionStateToColor}}" Opacity="0.9">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Connection status: " TextBlock.FontWeight="Bold" />
                            <Label>
                                <TextBlock Text="{Binding Path=ConnectionState}" TextBlock.FontWeight="Bold" />
                            </Label>
                        </StackPanel>
                    </Border>
                </StatusBarItem>
            </StatusBar>
        </Grid>
</UserControl>
